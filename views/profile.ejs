<div class="max-w-md mx-auto mt-10 bg-white p-6 rounded-lg shadow-md">
    <h2 class="text-2xl font-bold text-gray-700 text-center">Student Profile</h2>
    <div id="profile" class="mt-4 text-gray-600 text-lg">
        <p><strong>ID:</strong> <span data-bind="text: id"></span></p>
        <p><strong>Name:</strong> <span data-bind="text: name"></span></p>
        <p><strong>Email:</strong> <span data-bind="text: email"></span></p>
        <p><strong>Phone:</strong> <span data-bind="text: phone"></span></p>
        <p><strong>Date of Birth:</strong> <span data-bind="text: formattedDob"></span></p>
    </div>
    <div class="flex justify-center items-center w-full mt-4">
        <button type="button" class="bg-red-500 text-white px-3 py-2 rounded-md cursor-pointer">Logout</button>
    </div>
</div>

<script src="/javascripts/knockout.js"></script>
<script>
    function StudentProfileViewModel() {
        var self = this;

        self.id = ko.observable("");
        self.name = ko.observable("");
        self.email = ko.observable("");
        self.phone = ko.observable("");
        self.dob = ko.observable("");

        self.formattedDob = ko.computed(() => {
            return self.dob() ? new Date(self.dob()).toISOString().split('T')[0] : "";
        });

        self.fetchStudentProfile = async function () {
            const userEmail = localStorage.getItem("userEmail");

            if (!userEmail) {
                alert("No user logged in.");
                return;
            }

            try {
                const apiUrl = `https://localhost:7209/api/Student/email/${userEmail}`;
                const response = await fetch(apiUrl);

                if (!response.ok) {
                    throw new Error("Failed to fetch student data.");
                }

                const student = await response.json();
                self.id(student.id);
                self.name(student.name);
                self.email(student.email);
                self.phone(student.phone);
                self.dob(student.dob);

            } catch (error) {
                console.error("Error fetching student data:", error);
            }
        };

        self.fetchStudentProfile();
    }

    document.addEventListener("DOMContentLoaded", () => {
        ko.applyBindings(new StudentProfileViewModel());
    });
</script>
