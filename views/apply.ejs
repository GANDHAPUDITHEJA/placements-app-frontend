<div class="max-w-md mx-auto mt-10 bg-white p-6 rounded-lg shadow-md">
    <h2 class="text-2xl font-bold text-gray-700 text-center">Apply for Job</h2>

    <form data-bind="submit: submitApplication">
        <p><strong>Opening ID:</strong> <span data-bind="text: openingId"></span></p>
        <label class="block mt-4">
            <span class="text-gray-700">Select Resume:</span>
            <select class="block w-full mt-1 p-2 border rounded" data-bind="options: resumes, value: selectedResume"></select>
        </label>

        <button type="submit"
            class="mt-4 w-full bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-50">
            Submit Application
        </button>
    </form>
</div>

<script>
    function ApplicationViewModel() {
        var self = this;
        const urlParams = new URLSearchParams(window.location.search);
        self.openingId = ko.observable(urlParams.get("openingId"));
        self.userEmail = ko.observable(localStorage.getItem("userEmail")); // Get from localStorage
        self.resumes = ko.observableArray([]);
        self.selectedResume = ko.observable();

        // Fetch available resumes for the user
        self.fetchResumes = async function () {
            try {
                const response = await fetch(`/api/resumes?email=${self.userEmail()}`);
                if (!response.ok) throw new Error("Failed to fetch resumes.");
                const data = await response.json();
                self.resumes(data.map(resume => ({ id: resume.id, name: resume.name })));
            } catch (error) {
                console.error("Error fetching resumes:", error);
            }
        };

        // Submit Application
        self.submitApplication = async function () {
            if (!self.selectedResume()) {
                alert("Please select a resume.");
                return;
            }

            const applicationData = {
                studentEmail: self.userEmail(),
                openingId: parseInt(self.openingId(), 10),
                resumeId: parseInt(self.selectedResume().id, 10)
            };

            try {
                const response = await fetch("/api/applications", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(applicationData)
                });

                if (!response.ok) throw new Error("Failed to submit application.");

                alert("Application submitted successfully!");
                window.location.href = "/"; // Redirect to home
            } catch (error) {
                console.error("Error submitting application:", error);
            }
        };

        self.fetchResumes();
    }

    document.addEventListener("DOMContentLoaded", () => ko.applyBindings(new ApplicationViewModel()));
</script>
