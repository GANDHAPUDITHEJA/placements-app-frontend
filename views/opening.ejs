<div class="max-w-4xl mx-auto space-y-4">
    <h1 class="text-2xl font-bold text-gray-800">Job Openings</h1>

    <div class="space-y-4" data-bind="foreach: jobs">
        <div class="flex items-center justify-between p-4 border rounded-lg shadow-md bg-white">
            <div>
                <h2 class="text-xl mb-2 font-semibold text-gray-800" data-bind="text: formattedCompanyName"></h2>
                <p class="text-gray-600"><strong>Role:</strong> <span data-bind="text: jobTitle"></span></p>
                <p class="text-gray-500"><strong>Last Date to Apply:</strong> <span
                        data-bind="text: formattedLastDate"></span></p>
                <p class="text-green-600 font-semibold" data-bind="visible: isActive">Open for Applications</p>
                <p class="text-red-600 font-semibold" data-bind="visible: !isActive()">Closed</p>
            </div>
            <button class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50"
                data-bind="click: apply, enable: isActive">
                Apply
            </button>
        </div>
    </div>
</div>

<script src="/javascripts/knockout.js"></script>
<script>
    function Job(data) {
        this.openingId = ko.observable(data.id)
        this.companyName = ko.observable(data.companyName);
        this.jobTitle = ko.observable(data.jobTitle);
        this.description = ko.observable(data.description);
        this.createdDate = ko.observable(data.createdDate);
        this.lastDate = ko.observable(data.lastDate);
        this.isActive = ko.observable(data.isActive);
        this.formattedCreatedDate = ko.computed(() => new Date(this.createdDate()).toLocaleDateString());
        this.formattedLastDate = ko.computed(() => new Date(this.lastDate()).toLocaleDateString());
        this.formattedCompanyName = ko.computed(() => {
            return this.companyName().charAt(0).toUpperCase() + this.companyName().slice(1);
        });

        this.apply = function () {
            if (this.isActive()) {
                const openingId = this.openingId;
                window.location.href = `/student/apply?openingId=${openingId}`;
            }
        };

    }

    function JobViewModel() {
        var self = this;
        self.jobs = ko.observableArray([]);

        self.fetchJobs = function () {
            fetch('https://localhost:7209/api/Opening')
                .then(response => response.json())
                .then(data => self.jobs(data.map(job => new Job(job))))
                .catch(error => console.error("Error fetching jobs:", error));
        };

        self.fetchJobs();
    }

    document.addEventListener("DOMContentLoaded", () => ko.applyBindings(new JobViewModel()));
</script>